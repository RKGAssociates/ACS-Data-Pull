install.packages("tidyverse")
install.packages("shinydashboard")
install.packages("shinydashboard")
clear
install.packages("shiny")
## app.R ##
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
help(seq_len)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
)
),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
y <- ts(c(123,39,78,52,110), start=2012)
View(y)
y <- ts(c(123,39,78,52,110), start=2015)
View(y)
??random
?random
??random
??random
z <- mvnorm(n=12, 10, 1)
z <- mvrnorm(n=12, 10, 1)
z <- mvrnorm(n=12, 10, 1)
z <- mvrnorm(12, 10, 1)
install.packages("MASS")
z <- mvrnorm(12, 10, 1)
install.packages("mvrnorm")
clear
z <- mvrnorm(12, 10, 1)
z <- mvrnorm(12, 10)
z <- c(100,200,300,400,500,600,700,800,900,100,1100,13000)
y2 <- ts(z, start=2010, frequency = 12)
rm(list=ls())
autoplot(melsyd[,"Economy.Class"]) +
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
data(melsyd)
install.packages("fpp")
autoplot(melsyd[,"Economy.Class"]) +
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
data(melsyd)
library(fpp)
autoplot(melsyd[,"Economy.Class"]) +
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
library(fpp)
library(tidyverse)
autoplot(melsyd[,"Economy.Class"]) +
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
?autoplot
library(fpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(fpp)
library(tidyverse)
autoplot(melsyd[,"Economy.Class"])
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
autoplot(melsyd[,"Economy.Class"])
autoplot(melsyd[,"Economy.Class"]) +
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
melsyd
melsyd[Economy.class]
melsyd["Economy.class"]
melsyd
melsyd[, "Economy.Class"]
melsyd[, Economy.Class]
"
melsyd[, "Economy.Class"]
melsyd[, "Economy.Class"]
autoplot(a10) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
install.package("tidycensus")
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
install.packages(c("boot", "broom", "callr", "digest", "dplyr", "forecast", "foreign", "jsonlite", "knitr", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rlang", "rstudioapi", "stringi", "tidyr", "tidyselect", "vctrs", "yaml"))
install.packages(c("boot", "broom", "callr", "digest", "dplyr", "forecast", "foreign", "jsonlite", "knitr", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rlang", "rstudioapi", "stringi", "tidyr", "tidyselect", "vctrs", "yaml"))
install.packages(c("boot", "broom", "callr", "digest", "dplyr", "forecast", "foreign", "jsonlite", "knitr", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rlang", "rstudioapi", "stringi", "tidyr", "tidyselect", "vctrs", "yaml"))
install.packages(c("boot", "broom", "callr", "digest", "dplyr", "forecast", "foreign", "jsonlite", "knitr", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rlang", "rstudioapi", "stringi", "tidyr", "tidyselect", "vctrs", "yaml"))
install.packages(c("boot", "broom", "callr", "digest", "dplyr", "forecast", "foreign", "jsonlite", "knitr", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rlang", "rstudioapi", "stringi", "tidyr", "tidyselect", "vctrs", "yaml"))
install.packages(c("boot", "callr", "dplyr", "forecast", "knitr", "rlang", "tidyr", "tidyselect"))
install.packages(c("broom", "digest", "foreign", "jsonlite", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rstudioapi", "stringi", "yaml"))
install.packages(c("broom", "digest", "foreign", "jsonlite", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "rstudioapi", "stringi", "yaml"))
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages(c("broom", "digest", "foreign", "jsonlite", "lattice", "mime", "nlme", "prettyunits", "processx", "ps", "RcppArmadillo", "stringi", "yaml"))
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages('devtools', repos = 'http://cran.us.r-project.org')
clear
devtools::install_github("hadley/devtools")
devtools::install_github("hadley/devtools")
install.packages("devtools")
install.packages('devtools', repos = 'http://cran.us.r-project.org')
devtools::install_github('xuyiqing/gsynth')
remove.packages("gsynth")
setwd("~/Documents/career/RKG/code/RKG-Data-Pull")
library(tidyverse)
library(tidycensus)
library(readxl)
library(openxlsx)
source("funcs.r")
source("call.r")
# Parameters ----
data_path <- "~/Documents/career/RKG/data/"
setwd("~/Documents/career/RKG/code/ACS-Data-Pull")
library(tidyverse)
library(tidycensus)
library(readxl)
library(openxlsx)
source("funcs.r")
source("call.r")
# Parameters ----
data_path <- "~/Documents/career/RKG/data/"
read_file <- "Data Pull_NashuaNH.xlsx"
var_sheet <- "Data Pull"
census_api_key("2f7688b42a2c229e0662079bf0f4f5400cbb7551")
# inputs ----
acs_years <-c(2013,2018)
geo_level <- "county subdivision"
st <- "NH"
cnty <- "Hillsborough county"
survey_type <- "acs5"
cnty_name <- str_replace(cnty," ","_")
name <- "Nashua City" ## CHOOSE st, cnty_name, or insert a custom name
# labels ----
labels <- read_excel(paste(data_path,read_file,sep=""),sheet=var_sheet)
labels <- filter(labels, Source=="ACS Data")
tables <- labels[2]
View(tables)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df <- get_acs(geography=geo_level,
table = "B01003",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
View(df)
source('~/Documents/career/RKG/code/ACS-Data-Pull/prototype.r', echo=TRUE)
View(df)
tables
tables[[t]]
t <- 1
tables[[t]]
tables[[1]]
tables[1]
tables[[t,1]]
toString(B01001)
as.numeric(tables[[t,1]])
tables[[t,1]]
as.numeric(tables[[t,1]])
tables[t,1]
as.numeric(tables[t,1])
as.numeric(as.character(tables[[t,1]]))
tabltes[[t,1]]
tables[[t,1]]
as.numeric(tables[[t,1]])
source('~/Documents/career/RKG/code/ACS-Data-Pull/prototype.r', echo=TRUE)
View(df)
source('~/Documents/career/RKG/code/ACS-Data-Pull/prototype.r', echo=TRUE)
data(fips_codes)
force(fips_codes)
View(labels)
# data(fips_codes)
load_variables(2013,"acs5",cache=TRUE)
# data(fips_codes)
vars <- load_variables(2013,"acs5",cache=TRUE)
View(vars)
source('~/Documents/career/RKG/code/ACS-Data-Pull/prototype.r', echo=TRUE)
View(fin_df)
source('~/Documents/career/RKG/code/ACS-Data-Pull/prototype.r', echo=TRUE)
fin_df$label <- str_remove_all(fin_df$label, "Estimate!!Total!!")
fin_df$label <- str_remove_all(fin_df$label, " alone")
fin_df <- fin_df %>%
filter(fin_df, label, estimate)
?filter
?select
fin_df <- fin_df %>%
select(fin_df, label, estimate)
fin_df <- fin_df %>%
select(fin_df, "label", "estimate")
fin_df <- fin_df %>%
select(fin_df, label, estimate)
fin_df <- fin_df %>%
select(fin_df, label)
fin_df <- fin_df %>%
select(fin_df, label)
fin_df <- fin_df %>%
select(fin_df,label)
fin_df
View(fin_df)
fin_df <- fin_df %>%
select(fin_df,"label")
fin_df <- select(fin_df,"label","estimate")
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
exit
clear
a
rm(list=ls())
source('~/Documents/career/RKG/code/ACS-Data-Pull/call.r', echo=TRUE)
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
t <- 1
tables[[t,1]]
tables[[t,1]]=="B01001"
tables[[t,1]]=="B01002"
tables[[t,1]]=="B01001"
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
# inputs ----
acs_years <-c(2013,2018)
geo_level <- "county"
st <- "NH"
cnty <- "Hillsborough county"
survey_type <- "acs5"
cnty_name <- str_replace(cnty," ","_")
name <- cnty_name ## CHOOSE st, cnty_name, or insert a custom name
# labels ----
labels <- read_excel(paste(data_path,read_file,sep=""),sheet=var_sheet)
labels <- filter(labels, Source=="ACS Data")
tables <- labels[2]
# wb setup ----
wb <- loadWorkbook(paste(data_path,read_file,sep=""))
# wb <- createWorkbook()
df <- get_acs(geography=geo_level,
table = "B01001",
state = st,
county = cnty,
cache_table = TRUE,
year = acs_years[1],
survey = survey_type)
df_insert <- df
row_count <- nrow(df_insert)
vars <- load_variables(acs_years[1], survey_type, cache = TRUE)
vars <- select(vars, "name","label")
vars <- rename(vars, "variable"="name")
fin_df <- inner_join(vars,df_insert,by = "variable")
fin_df$label <- str_remove_all(fin_df$label, "Estimate!!")
fin_df$label <- str_replace_all(fin_df$label, "!!", "_")
fin_df$label <- str_remove_all(fin_df$label, "Male_")
fin_df$label <- str_remove_all(fin_df$label, "Female_")
fin_df <- fin_df %>%
group_by(label) %>%
summarise(estimate = sum(estimate))
fin_df$label <- str_replace_all(fin_df$label, "_", " ")
fin_df$label <- str_remove_all(fin_df$label, "Total ")
fin_df <- fin_df %>%
filter(!str_detect(fin_df$label, "Total"))
fin_df <- fin_df %>%
filter(!str_detect(fin_df$label, "Male"))
fin_df <- fin_df %>%
filter(!str_detect(fin_df$label, "Female"))
nums <- sprintf("%s",seq(1:99))
fin_df <- tibble::add_column(fin_df, ages = "")
fin_df$ages <- suppressWarnings(as.numeric(substr(fin_df$label, start = 1, stop = 2)))
fin_df$ages[str_detect(fin_df$label,"Under 5")] <- 0
fin_df$ages[str_detect(fin_df$label,"5 to 9")] <- 5
fin_df <- arrange(fin_df,fin_df$ages)
vals <- c()
vals <- append( vals,(fin_df %>% group_by(ages < 18) %>% summarise(estimate=sum(estimate)))[[2,2]] )
vals <- append( vals,(fin_df %>% group_by(ages >= 18 & ages <= 24) %>% summarise(estimate=sum(estimate)))[[2,2]] )
vals <- append( vals,(fin_df %>% group_by(ages >= 25 & ages <= 34) %>% summarise(estimate=sum(estimate)))[[2,2]] )
vals <- append( vals,(fin_df %>% group_by(ages >= 35 & ages <= 44) %>% summarise(estimate=sum(estimate)))[[2,2]] )
vals <- append( vals,(fin_df %>% group_by(ages >= 45 & ages <= 54) %>% summarise(estimate=sum(estimate)))[[2,2]] )
vals <- append( vals,(fin_df %>% group_by(ages >= 55 & ages <= 64) %>% summarise(estimate=sum(estimate)))[[2,2]] )
vals <- append( vals,(fin_df %>% group_by(ages > 64) %>% summarise(estimate=sum(estimate)))[[2,2]] )
col_labels <- c(
"Under 18",
"18 to 24 years",
"25 to 34 years",
"35 to 44 years",
"45 to 54 years",
"55 to 64 years",
"65+ years"
)
write_df <- data.frame(labels = col_labels, estimates = vals)
write_df
View(write_df)
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
source('~/Documents/career/RKG/code/ACS-Data-Pull/funcs.r', echo=TRUE)
source('~/Documents/career/RKG/code/ACS-Data-Pull/get_data.R', echo=TRUE)
